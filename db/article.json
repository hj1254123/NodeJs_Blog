[{
    "title": "11111",
    "time": 1539446698,
    "intro": "11111111111111",
    "content": "## 基本选择器\n\n| 名称       | 用法               | 描述                                 |\n| ---------- | ------------------ | :----------------------------------- |\n| ID选择器   | $(“#id”);          | 获取指定ID的元素                     |\n| 类选择器   | $(“.class”);       | 获取同一类class的元素                |\n| 标签选择器 | $(“div”);          | 获取同一类标签的所有元素             |\n| 并集选择器 | $(“div,p,li”);     | 使用逗号分隔，只要符合条件之一就可。 |\n| 交集选择器 | $(“div.redClass”); | 获取class为redClass的div元素         |\n\n> 总结：跟css的选择器用法一模一样。\n\n\n\n## 层级选择器\n\n| 名称       | 用法        | 描述                                                        |\n| ---------- | ----------- | :---------------------------------------------------------- |\n| 子代选择器 | $(“ul>li”); | 使用>号，获取儿子层级的元素，注意，并不会获取孙子层级的元素 |\n| 后代选择器 | $(“ul li”); | 使用空格，代表后代选择器，获取ul下的所有li元素，包括孙子等  |\n\n\n\n> 跟CSS的选择器一模一样。\n\n## 过滤选择器\n\n> 这类选择器都带冒号:\n\n| 名称         | 用法                               | 描述                                                        |\n| ------------ | ---------------------------------- | :---------------------------------------------------------- |\n| :eq（index） | $(“li:eq(2)”).css(“color”, ”red”); | 获取到的li元素中，选择索引号为2的元素，索引号index从0开始。 |\n| :odd         | $(“li:odd”).css(“color”, ”red”);   | 获取到的li元素中，选择索引号为奇数的元素                    |\n| :even        | $(“li:even”).css(“color”, ”red”);  | 获取到的li元素中，选择索引号为偶数的元素                    |\n\n\n## 筛选选择器(方法)\n\n> 筛选选择器的功能与过滤选择器有点类似，但是用法不一样，筛选选择器主要是方法。\n\n| 名称               | 用法                        | 描述                             |\n| ------------------ | --------------------------- | :------------------------------- |\n| children(selector) | $(“ul”).children(“li”)      | 相当于$(“ul>li”)，子类选择器     |\n| find(selector)     | $(“ul”).find(“li”);         | 相当于$(“ul li”),后代选择器      |\n| siblings(selector) | $(“#first”).siblings(“li”); | 查找兄弟节点，不包括自己本身。   |\n| parent()           | $(“#first”).parent();       | 查找父亲                         |\n| eq(index)          | $(“li”).eq(2);              | 相当于$(“li:eq(2)”),index从0开始 |\n| next()             | $(“li”).next()              | 找下一个兄弟                     |\n| prev()             | $(“li”).prev()              | 找上一次兄弟                     |",
    "id": 1
}]
