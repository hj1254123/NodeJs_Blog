[{
    "title": "标题AJAX",
    "time": 1539483996,
    "intro": "",
    "content": "### ajax\n\n`ajax(url, settings)`函数需要接收一个URL和一个可选的`settings`对象，常用的选项如下：\n\n- async：是否异步，默认为`true`，千万不要指定为`false`；\n- method：发送的Method，缺省为`'GET'`，可指定为`'POST'`、`'PUT'`等；\n- contentType：发送POST请求的格式，默认值为`'application/x-www-form-urlencoded; charset=UTF-8'`，也可以指定为`text/plain`、`application/json`；\n- data：发送的数据，可以是字符串、数组或object。如果是GET请求，data将被转换成query附加到URL上，如果是POST请求，根据contentType把data序列化成合适的格式；\n- headers：发送的额外的HTTP头，必须是一个object；\n- dataType：接收的数据格式，可以指定为`'html'`、`'xml'`、`'json'`、`'text'`等，缺省情况下根据响应的`Content-Type`猜测。\n\n下面的例子发送一个GET请求，并返回一个JSON格式的数据：\n\n```js\nvar jqxhr = $.ajax('/api/categories', {\n    dataType: 'json'\n});\n// 请求已经发送了\n```\n\n\n\n```js\nvar jqxhr = $.ajax('/api/categories', {\n    dataType: 'json'\n}).done(function (data) {\n    ajaxLog('成功, 收到的数据: ' + JSON.stringify(data));\n}).fail(function (xhr, status) {\n    ajaxLog('失败: ' + xhr.status + ', 原因: ' + status);\n}).always(function () {\n    ajaxLog('请求完成: 无论成功或失败都会调用');\n});\n```\n\n\n\n### get\n\n对常用的AJAX操作，jQuery提供了一些辅助方法。由于GET请求最常见，所以jQuery提供了`get()`方法，可以这么写：\n\n```js\nvar jqxhr = $.get('/path/to/resource', {\n    name: 'Bob Lee',\n    check: 1\n});\n```\n\n第二个参数如果是object，jQuery自动把它变成query string然后加到URL后面，实际的URL是：\n\n```\n/path/to/resource?name=Bob%20Lee&check=1\n```\n\n这样我们就不用关心如何用URL编码并构造一个query string了。\n\n### post\n\n`post()`和`get()`类似，但是传入的第二个参数默认被序列化为`application/x-www-form-urlencoded`：\n\n```js\nvar jqxhr = $.post('/path/to/resource', {\n    name: 'Bob Lee',\n    check: 1\n});\n```\n\n实际构造的数据`name=Bob%20Lee&check=1`作为POST的body被发送。\n\n### getJSON\n\n由于JSON用得越来越普遍，所以jQuery也提供了`getJSON()`方法来快速通过GET获取一个JSON对象：\n\n```js\nvar jqxhr = $.getJSON('/path/to/resource', {\n    name: 'Bob Lee',\n    check: 1\n}).done(function (data) {\n    // data已经被解析为JSON对象了\n});\n```\n\n ",
    "id": 1
}, {
    "title": "jq选择器",
    "time": 1539484051,
    "intro": "一篇jq的笔记，嘟嘟嘟",
    "content": "## 基本选择器\n\n| 名称       | 用法               | 描述                                 |\n| ---------- | ------------------ | :----------------------------------- |\n| ID选择器   | $(“#id”);          | 获取指定ID的元素                     |\n| 类选择器   | $(“.class”);       | 获取同一类class的元素                |\n| 标签选择器 | $(“div”);          | 获取同一类标签的所有元素             |\n| 并集选择器 | $(“div,p,li”);     | 使用逗号分隔，只要符合条件之一就可。 |\n| 交集选择器 | $(“div.redClass”); | 获取class为redClass的div元素         |\n\n> 总结：跟css的选择器用法一模一样。\n\n\n\n## 层级选择器\n\n| 名称       | 用法        | 描述                                                        |\n| ---------- | ----------- | :---------------------------------------------------------- |\n| 子代选择器 | $(“ul>li”); | 使用>号，获取儿子层级的元素，注意，并不会获取孙子层级的元素 |\n| 后代选择器 | $(“ul li”); | 使用空格，代表后代选择器，获取ul下的所有li元素，包括孙子等  |\n\n\n\n> 跟CSS的选择器一模一样。\n\n## 过滤选择器\n\n> 这类选择器都带冒号:\n\n| 名称         | 用法                               | 描述                                                        |\n| ------------ | ---------------------------------- | :---------------------------------------------------------- |\n| :eq（index） | $(“li:eq(2)”).css(“color”, ”red”); | 获取到的li元素中，选择索引号为2的元素，索引号index从0开始。 |\n| :odd         | $(“li:odd”).css(“color”, ”red”);   | 获取到的li元素中，选择索引号为奇数的元素                    |\n| :even        | $(“li:even”).css(“color”, ”red”);  | 获取到的li元素中，选择索引号为偶数的元素                    |\n\n\n## 筛选选择器(方法)\n\n> 筛选选择器的功能与过滤选择器有点类似，但是用法不一样，筛选选择器主要是方法。\n\n| 名称               | 用法                        | 描述                             |\n| ------------------ | --------------------------- | :------------------------------- |\n| children(selector) | $(“ul”).children(“li”)      | 相当于$(“ul>li”)，子类选择器     |\n| find(selector)     | $(“ul”).find(“li”);         | 相当于$(“ul li”),后代选择器      |\n| siblings(selector) | $(“#first”).siblings(“li”); | 查找兄弟节点，不包括自己本身。   |\n| parent()           | $(“#first”).parent();       | 查找父亲                         |\n| eq(index)          | $(“li”).eq(2);              | 相当于$(“li:eq(2)”),index从0开始 |\n| next()             | $(“li”).next()              | 找下一个兄弟                     |\n| prev()             | $(“li”).prev()              | 找上一次兄弟                     |",
    "id": 2
}]
